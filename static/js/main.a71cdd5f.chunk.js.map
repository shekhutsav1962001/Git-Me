{"version":3,"sources":["apis/index.js","components/Gitview.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseURL","process","getUserDetails","username","a","url","fetch","res","ok","json","getUserDiff","url1","res1","json1","following","forEach","elem","push","login","url2","res2","json2","followers","filter","x","includes","listdata","Gitview","useState","user","setUser","diff","setDiff","input","setInput","className","id","onSubmit","e","preventDefault","trim","fetchData","data","fetchDiff","getData","type","onChange","target","value","placeholder","autoComplete","src","avatar_url","alt","name","bio","public_repos","length","map","index","link","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a71cdd5f.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getUserDetails = async (username) => {\r\n    try {\r\n\r\n        let url = `${baseURL}${username}`;\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            return null\r\n        }\r\n\r\n        const json = await res.json();\r\n        return json;\r\n\r\n    } catch (error) {\r\n        return null\r\n    }\r\n};\r\n\r\nexport const getUserDiff = async (username) => {\r\n    try {\r\n\r\n        let url1 = `${baseURL}${username}/following`;\r\n        const res1 = await fetch(url1);\r\n\r\n        if (!res1.ok) {\r\n            return null\r\n        }\r\n\r\n        const json1 = await res1.json();\r\n        var following = []\r\n        json1.forEach(async function (elem) {\r\n            following.push(elem.login)\r\n        })\r\n\r\n\r\n        let url2 = `${baseURL}${username}/followers`;\r\n        const res2 = await fetch(url2);\r\n\r\n        if (!res2.ok) {\r\n            return null\r\n        }\r\n\r\n        const json2 = await res2.json();\r\n        var followers = []\r\n        json2.forEach(async function (elem) {\r\n            followers.push(elem.login)\r\n        })\r\n        let listdata = await following.filter(x => !followers.includes(x));\r\n        // console.log(listdata)\r\n        return listdata;\r\n\r\n    } catch (error) {\r\n        return null\r\n    }\r\n};","import React, { useState } from 'react'\r\nimport { getUserDetails, getUserDiff } from '../apis/index.js'\r\nfunction Gitview() {\r\n    const [user, setUser] = useState(null)\r\n\r\n    const [diff, setDiff] = useState([])\r\n    const [input, setInput] = useState(\"\");\r\n    function getData() {\r\n        if (input.trim() === \"\") {\r\n            return;\r\n        }\r\n        else {\r\n            async function fetchData() {\r\n                const data = await getUserDetails(input);\r\n                if (data) {\r\n                    setUser(data)\r\n                }\r\n                else {\r\n                    setUser(null)\r\n                }\r\n            }\r\n\r\n            async function fetchDiff() {\r\n\r\n                const data = await getUserDiff(input);\r\n                if (data) {\r\n                    setDiff(data)\r\n                }\r\n                else {\r\n                    setDiff([])\r\n                }\r\n\r\n            }\r\n            fetchData()\r\n            fetchDiff()\r\n        }\r\n    }\r\n    function handleEvent(e) {\r\n        setInput(e.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <form className=\"user-form\" id=\"form\" onSubmit={(e) => {\r\n                e.preventDefault()\r\n                getData()\r\n            }}>\r\n                <input type=\"text\" id=\"search\" onChange={handleEvent} placeholder=\"Search a Github User\" autoComplete=\"off\" />\r\n                <button type=\"submit\">Find</button>\r\n            </form>\r\n\r\n            {user == null ? (<div className=\"card\">\r\n                No Data found\r\n            </div>) : (<><div className=\"card\">\r\n                <div>\r\n                    <img src={user.avatar_url} alt=\"user\" className=\"avatar\" />\r\n                </div>\r\n                <div className=\"user-info\">\r\n                    {user.name == null ? (<h2>\r\n                        {user.login}\r\n                    </h2>) : (<h2>\r\n                        {user.name}\r\n                    </h2>)}\r\n\r\n                    {user.bio == null ? null : (<p>\r\n                        {user.bio}\r\n                    </p>)}\r\n\r\n                    <ul>\r\n                        <li>{`${user.followers} `}<strong>Followers</strong></li>\r\n                        <li>{`${user.following} `}<strong>Following</strong></li>\r\n                        <li>{`${user.public_repos} `}<strong>Repos</strong></li>\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n                <h3>People who don't follow back of given user : -</h3>\r\n                {diff.length === 0 ? (<h5>Great not found any user who dont follow back you</h5>) : null}\r\n                <ul>\r\n                    {\r\n                        diff.map((elem, index) => {\r\n                            let link = `https://github.com/${elem}`\r\n                            return (<li key={index}><a href={link}>{elem}</a></li>)})\r\n                    }\r\n                </ul>\r\n            </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gitview\r\n","import React from 'react'\nimport Gitview from \"./components/Gitview\";\n\nfunction App() {\n  return (\n    <Gitview/>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}